# -*- coding: utf-8 -*-
"""app_core.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/180MrYxj1Q38xbDzXsXEKR7SIyBkBtysO

○	calcular_factorial(n) donde se reciba el número 10 e imprima resultado.

○	calcular_multiplicacion(lista donde reciba [2, 4, 6, 10, 5] e imprima resultado.

○	main() donde se ejecute las tareas en paralelo.

○	Use start para iniciar ambos procesos y join para esperar y unir ambos procesos.
"""

def calcular_factorial(n):
  fact = 1
  for i in range(1,n):
    fact = fact*(i+1)
  return fact

calcular_factorial(10)

1*2*3*4*5*6*7*8*9*10

def calcular_multiplicacion(lista):
  mult = 1
  for elem in lista:
    mult = mult*elem
  return mult

calcular_multiplicacion([2,4,6,10,5])

import multiprocessing

multiprocessing.cpu_count()

def calcular_factorial(n):
  fact = 1
  for i in range(1,n):
    fact = fact*(i+1)
  return fact

def calcular_multiplicacion(lista):
  mult = 1
  for elem in lista:
    mult = mult*elem
  return mult

def multiprocesamiento():
  with multiprocessing.Pool as process:
    proceso1 =



def __main__ ():
  multiprocesamiento()
  print("TAREAS COMPLETADAS")

multiprocessing()



